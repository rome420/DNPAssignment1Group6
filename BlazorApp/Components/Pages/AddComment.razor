@page "/addcomment/{PostId}"
@using DTO
@inject HttpClient Http

<h3>Add Comment</h3>

<EditForm Model="@newComment" OnValidSubmit="HandleAddComment">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputTextArea @bind-Value="newComment.Body" placeholder="Write your comment..." />
    <button type="submit">Submit Comment</button>
</EditForm>

@if (errorMessage != null)
{
<p class="text-danger">@errorMessage</p>
}

@code {
[Parameter] public int PostId { get; set; }
private CommentDto newComment = new CommentDto();
private string errorMessage;

private async Task HandleAddComment()
{
try
{
// Ensure PostId is set before sending
newComment.PostId = PostId;

var response = await Http.PostAsJsonAsync($"https://yourapiurl.com/posts/{PostId}/comments", newComment);

if (response.IsSuccessStatusCode)
{
// Handle success (e.g., reset the form)
newComment = new CommentDto(); // Clear the form after submission
errorMessage = null; // Reset any previous error message
}
else
{
// Handle error if the request failed
errorMessage = "Failed to add comment. Please try again.";
}
}
catch (Exception ex)
{
errorMessage = $"An error occurred: {ex.Message}";
}
}
}
